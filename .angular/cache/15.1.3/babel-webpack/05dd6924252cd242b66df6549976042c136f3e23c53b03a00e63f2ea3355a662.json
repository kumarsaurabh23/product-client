{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport { Product } from '../product';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"../product.service\";\nimport * as i3 from \"@angular/material/dialog\";\nimport * as i4 from \"@angular/common\";\nimport * as i5 from \"@angular/material/button\";\nimport * as i6 from \"@angular/material/form-field\";\nimport * as i7 from \"@angular/material/input\";\nimport * as i8 from \"@angular/material/select\";\nimport * as i9 from \"@angular/material/core\";\nimport * as i10 from \"@angular/material/datepicker\";\nimport * as i11 from \"@angular/material/radio\";\nfunction DialogComponent_mat_option_12_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-option\", 18);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const category_r3 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", category_r3.value);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", category_r3.viewValue, \" \");\n  }\n}\nfunction DialogComponent_mat_radio_button_26_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-radio-button\", 19);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const fresh_r4 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", fresh_r4);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", fresh_r4, \" \");\n  }\n}\nexport class DialogComponent {\n  constructor(formBuilder, productService, dialogRef, editData) {\n    this.formBuilder = formBuilder;\n    this.productService = productService;\n    this.dialogRef = dialogRef;\n    this.editData = editData;\n    this.productCategory = [{\n      value: \"Phones\",\n      viewValue: \"Phones\"\n    }, {\n      value: \"Laptops\",\n      viewValue: \"Laptops\"\n    }, {\n      value: \"Desktops\",\n      viewValue: \"Desktops\"\n    }];\n    this.freshnessList = [\"New\", \"Refurbished\"];\n    this.actionBtn = \"Save\";\n  }\n  ngOnInit() {\n    this.productForm = this.formBuilder.group({\n      productName: ['', Validators.required],\n      category: ['', Validators.required],\n      freshness: ['', Validators.required],\n      price: ['', Validators.required],\n      comment: ['', Validators.required],\n      date: ['', Validators.required]\n    });\n    if (this.editData) {\n      this.productForm.controls['productName'].setValue(this.editData.name);\n      this.productForm.controls['category'].setValue(this.editData.category);\n      this.productForm.controls['freshness'].setValue(this.editData.freshness);\n      this.productForm.controls['price'].setValue(this.editData.price);\n      this.productForm.controls['comment'].setValue(this.editData.comment);\n      this.productForm.controls['date'].setValue(this.editData.date);\n      this.actionBtn = \"Update\";\n    }\n  }\n  addProduct() {\n    if (this.productForm.valid) {\n      let p = new Product(0, this.productForm.value.productName, this.productForm.value.category, this.productForm.value.freshness, this.productForm.value.price, this.productForm.value.comment, this.productForm.value.date);\n      this.productService.addProduct(p);\n      this.productForm.reset();\n      this.dialogRef.close();\n      alert(\"product saved successfully\");\n    } else {\n      console.log(\"form invalid\");\n    }\n  }\n  getAllProducts() {\n    this.productService.getProducts();\n  }\n}\nDialogComponent.ɵfac = function DialogComponent_Factory(t) {\n  return new (t || DialogComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.ProductService), i0.ɵɵdirectiveInject(i3.MatDialogRef), i0.ɵɵdirectiveInject(MAT_DIALOG_DATA));\n};\nDialogComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: DialogComponent,\n  selectors: [[\"app-dialog\"]],\n  decls: 40,\n  vars: 7,\n  consts: [[\"mat-dialog-title\", \"\"], [\"mat-dialog-content\", \"\"], [3, \"formGroup\"], [\"appearance\", \"outline\"], [\"formControlName\", \"productName\", \"matInput\", \"\", \"placeholder\", \"Name\"], [\"formControlName\", \"category\", \"placeholder\", \"Category\"], [3, \"value\", 4, \"ngFor\", \"ngForOf\"], [\"formControlName\", \"date\", \"matInput\", \"\", 3, \"matDatepicker\"], [\"matIconSuffix\", \"\", 3, \"for\"], [\"picker\", \"\"], [\"for\", \"\"], [\"formControlName\", \"freshness\", \"aria-labelledby\", \"example-radio-group-label\", 1, \"example-radio-group\"], [\"class\", \"example-radio-button\", 3, \"value\", 4, \"ngFor\", \"ngForOf\"], [\"formControlName\", \"price\", \"matInput\", \"\", \"type\", \"number\", \"placeholder\", \"Price\"], [\"formControlName\", \"comment\", \"matInput\", \"\"], [\"mat-dialog-action\", \"\", 3, \"align\"], [\"mat-raised-button\", \"\", \"color\", \"warn\", \"mat-dialog-close\", \"\"], [\"mat-raised-button\", \"\", \"color\", \"primary\", 2, \"margin-left\", \"8px\", 3, \"click\"], [3, \"value\"], [1, \"example-radio-button\", 3, \"value\"]],\n  template: function DialogComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"h1\", 0);\n      i0.ɵɵtext(1, \"Add Product Form\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(2, \"div\", 1)(3, \"form\", 2)(4, \"mat-form-field\", 3)(5, \"mat-label\");\n      i0.ɵɵtext(6, \"Product Name\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(7, \"input\", 4);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(8, \"mat-form-field\", 3)(9, \"mat-label\");\n      i0.ɵɵtext(10, \"Product Category\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(11, \"mat-select\", 5);\n      i0.ɵɵtemplate(12, DialogComponent_mat_option_12_Template, 2, 2, \"mat-option\", 6);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(13, \"mat-form-field\", 3)(14, \"mat-label\");\n      i0.ɵɵtext(15, \"Choose a date\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(16, \"input\", 7);\n      i0.ɵɵelementStart(17, \"mat-hint\");\n      i0.ɵɵtext(18, \"MM/DD/YYYY\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(19, \"mat-datepicker-toggle\", 8)(20, \"mat-datepicker\", null, 9);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(22, \"label\", 10)(23, \"h1\");\n      i0.ɵɵtext(24, \"Product Freshness\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(25, \"mat-radio-group\", 11);\n      i0.ɵɵtemplate(26, DialogComponent_mat_radio_button_26_Template, 2, 2, \"mat-radio-button\", 12);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(27, \"mat-form-field\", 3)(28, \"mat-label\");\n      i0.ɵɵtext(29, \"Price\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(30, \"input\", 13);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(31, \"mat-form-field\", 3)(32, \"mat-label\");\n      i0.ɵɵtext(33, \"Comment\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(34, \"textarea\", 14);\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(35, \"div\", 15)(36, \"button\", 16);\n      i0.ɵɵtext(37, \"Close\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(38, \"button\", 17);\n      i0.ɵɵlistener(\"click\", function DialogComponent_Template_button_click_38_listener() {\n        return ctx.addProduct();\n      });\n      i0.ɵɵtext(39);\n      i0.ɵɵelementEnd()();\n    }\n    if (rf & 2) {\n      const _r1 = i0.ɵɵreference(21);\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"formGroup\", ctx.productForm);\n      i0.ɵɵadvance(9);\n      i0.ɵɵproperty(\"ngForOf\", ctx.productCategory);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"matDatepicker\", _r1);\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"for\", _r1);\n      i0.ɵɵadvance(7);\n      i0.ɵɵproperty(\"ngForOf\", ctx.freshnessList);\n      i0.ɵɵadvance(9);\n      i0.ɵɵproperty(\"align\", \"end\");\n      i0.ɵɵadvance(4);\n      i0.ɵɵtextInterpolate(ctx.actionBtn);\n    }\n  },\n  dependencies: [i4.NgForOf, i5.MatButton, i3.MatDialogClose, i3.MatDialogTitle, i3.MatDialogContent, i6.MatFormField, i6.MatLabel, i6.MatHint, i6.MatSuffix, i7.MatInput, i8.MatSelect, i9.MatOption, i1.ɵNgNoValidate, i1.DefaultValueAccessor, i1.NumberValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i10.MatDatepicker, i10.MatDatepickerInput, i10.MatDatepickerToggle, i11.MatRadioGroup, i11.MatRadioButton, i1.FormGroupDirective, i1.FormControlName],\n  styles: [\"mat-form-field[_ngcontent-%COMP%] {\\n  width: 100%;\\n}\\n\\n.example-radio-group[_ngcontent-%COMP%] {\\n  display: flex;\\n  flex-direction: column;\\n  margin: 15px 0;\\n  align-items: flex-start;\\n}\\n\\n.example-radio-button[_ngcontent-%COMP%] {\\n  margin: 5px;\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvZGlhbG9nL2RpYWxvZy5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNJLFdBQUE7QUFDSjs7QUFFQTtFQUNJLGFBQUE7RUFDQSxzQkFBQTtFQUNBLGNBQUE7RUFDQSx1QkFBQTtBQUNKOztBQUVFO0VBQ0UsV0FBQTtBQUNKIiwic291cmNlc0NvbnRlbnQiOlsibWF0LWZvcm0tZmllbGQge1xyXG4gICAgd2lkdGg6IDEwMCVcclxufVxyXG5cclxuLmV4YW1wbGUtcmFkaW8tZ3JvdXAge1xyXG4gICAgZGlzcGxheTogZmxleDtcclxuICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XHJcbiAgICBtYXJnaW46IDE1cHggMDtcclxuICAgIGFsaWduLWl0ZW1zOiBmbGV4LXN0YXJ0O1xyXG4gIH1cclxuICBcclxuICAuZXhhbXBsZS1yYWRpby1idXR0b24ge1xyXG4gICAgbWFyZ2luOiA1cHg7XHJcbiAgfSJdLCJzb3VyY2VSb290IjoiIn0= */\"]\n});","map":{"version":3,"mappings":"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","names":["Validators","Product","MAT_DIALOG_DATA","i0","DialogComponent","constructor","formBuilder","productService","dialogRef","editData","value","viewValue","ngOnInit","productForm","group","productName","required","category","freshness","price","comment","date","controls","setValue","name","actionBtn","addProduct","valid","p","reset","close","alert","console","log","getAllProducts","getProducts","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["C:\\Users\\Saurabh\\IdeaProjects\\angular-material-spring-boot\\product-client\\src\\app\\dialog\\dialog.component.ts","C:\\Users\\Saurabh\\IdeaProjects\\angular-material-spring-boot\\product-client\\src\\app\\dialog\\dialog.component.html"],"sourcesContent":["import { Component, OnInit, Inject } from '@angular/core';\nimport { Category } from '../category';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { ProductService } from '../product.service';\nimport { Product } from '../product';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\n\n@Component({\n  selector: 'app-dialog',\n  templateUrl: './dialog.component.html',\n  styleUrls: ['./dialog.component.scss']\n})\nexport class DialogComponent implements OnInit {\n  \n  productCategory : Category[] = [\n    { value:\"Phones\", viewValue:\"Phones\"},\n    { value:\"Laptops\", viewValue:\"Laptops\"},\n    { value:\"Desktops\", viewValue:\"Desktops\"}\n  ];\n\n  freshnessList= [\"New\", \"Refurbished\"]\n  productForm !: FormGroup;\n  actionBtn: string = \"Save\";\n\n  constructor(private formBuilder: FormBuilder, \n              private productService: ProductService,\n              private dialogRef: MatDialogRef<DialogComponent>,\n              @Inject(MAT_DIALOG_DATA) private editData: any)  {}\n\n  ngOnInit(): void {\n    this.productForm = this.formBuilder.group({\n      productName: ['', Validators.required],\n      category: ['', Validators.required],\n      freshness: ['', Validators.required],\n      price: ['', Validators.required],\n      comment: ['', Validators.required],\n      date: ['', Validators.required]\n    });\n\n    if(this.editData) {\n      this.productForm.controls['productName'].setValue(this.editData.name);\n      this.productForm.controls['category'].setValue(this.editData.category);\n      this.productForm.controls['freshness'].setValue(this.editData.freshness);\n      this.productForm.controls['price'].setValue(this.editData.price);\n      this.productForm.controls['comment'].setValue(this.editData.comment);\n      this.productForm.controls['date'].setValue(this.editData.date);\n      this.actionBtn = \"Update\";\n    }\n  }\n\n  addProduct() {\n    if(this.productForm.valid) {\n      let p: Product = new Product(0,this.productForm.value.productName,\n                                this.productForm.value.category,\n                                this.productForm.value.freshness,\n                                this.productForm.value.price,\n                                this.productForm.value.comment,\n                                this.productForm.value.date);\n      this.productService.addProduct(p);\n      this.productForm.reset();\n      this.dialogRef.close();\n      alert(\"product saved successfully\");\n    } else {\n      console.log(\"form invalid\");\n    }\n  }\n\n  getAllProducts() {\n    this.productService.getProducts();\n  }\n\n}\n","<h1 mat-dialog-title>Add Product Form</h1>\n<div mat-dialog-content>\n    <form [formGroup]=\"productForm\">\n        <mat-form-field appearance=\"outline\">\n            <mat-label>Product Name</mat-label>\n            <input formControlName=\"productName\" matInput placeholder=\"Name\">\n        </mat-form-field>\n        <mat-form-field appearance=\"outline\">\n            <mat-label>Product Category</mat-label>\n            <mat-select formControlName=\"category\" placeholder=\"Category\">\n                <mat-option *ngFor=\"let category of productCategory\" [value]=\"category.value\">\n                    {{category.viewValue}}\n                </mat-option>\n            </mat-select>\n        </mat-form-field>\n        <mat-form-field appearance=\"outline\">\n            <mat-label>Choose a date</mat-label>\n            <input formControlName=\"date\" matInput [matDatepicker]=\"picker\">\n            <mat-hint>MM/DD/YYYY</mat-hint>\n            <mat-datepicker-toggle matIconSuffix [for]=\"picker\"></mat-datepicker-toggle>\n            <mat-datepicker #picker></mat-datepicker>\n        </mat-form-field>\n        <label for=\"\"><h1>Product Freshness</h1></label>\n        <mat-radio-group formControlName=\"freshness\" aria-labelledby=\"example-radio-group-label\" class=\"example-radio-group\">\n            <mat-radio-button class=\"example-radio-button\" *ngFor=\"let fresh of freshnessList\" [value]=\"fresh\">\n                {{fresh}}\n            </mat-radio-button>\n        </mat-radio-group>\n        <mat-form-field appearance=\"outline\">\n            <mat-label>Price</mat-label>\n            <input formControlName=\"price\" matInput type=\"number\" placeholder=\"Price\">\n        </mat-form-field>\n        <mat-form-field appearance=\"outline\">\n            <mat-label>Comment</mat-label>\n            <textarea formControlName=\"comment\" matInput></textarea>\n        </mat-form-field>\n    </form>\n</div>\n<div mat-dialog-action [align]=\"'end'\">\n    <button mat-raised-button color=\"warn\" mat-dialog-close>Close</button>\n    <button style=\"margin-left: 8px\" mat-raised-button color=\"primary\" (click)=\"addProduct()\">{{actionBtn}}</button>\n</div>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}